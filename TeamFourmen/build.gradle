plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.itwill.teamfourmen'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.6'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.72.Final:osx-aarch_64'

	//WEBCLIENT를 사용하기 위한 의존성 추가 webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// WebClient 사용을 위한 의존성 설정.
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'

	// WebSocket사용을 위한 의존성 설정.
	implementation 'org.springframework.boot:spring-boot-starter-websocket'


	// aws위한 의존성
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'


	// Querydsl ----

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // springboot 3.0 이상일때
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'net.nurigo:sdk:4.3.0'

	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
}

tasks.named('test') {
	useJUnitPlatform()
}


// gradle build task 에러를 해결하기 위해서:
//testCompileOnly 'org.projectlombok:lombok'
//testAnnotationProcessor 'org.projectlombok:lombok'

// Querydsl 관련 빌드 옵션 -----------

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}
// -----------------------------------